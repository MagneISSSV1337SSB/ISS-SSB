---
format: html
editor: visual
execute: 
  warning: false
---

# Comparative countries

What are comparative countries? They are probably countries with a lot of similarities.

In order to compare how similar all countries are, it would be quite overwhelming to look at all the countries in the world. Then we need to figure out a starting point.

## Trading partners

A suggestion given in the task is to look at Norway's biggest trading partners. This includes EU countries, US, UK, Canada and China.

Is looking at trading partners really a good metric? Probably not.

The reason why we trade with other countries is because, either we produce goods they do not produce enough of, or the opposite. That creates a need to buy them from someone who do produce more than enough. Then we already know that there is a difference in the industries between these countries. Looking at trading partners will then only tell us who we buy the stuff we need from, or sell to.

Norway will also naturally trade more with countries that share a trading agreement or are in close proximity, that will mostly be EU/EEA countries.

So, although we should not base our comparisons on trading partners, it can be a good staring point.

Here is a vector of EU and EEA countries. Lichtenstein did unfortunately not work for this analysis, and is therefore excluded.

```{r}
# Creating a vector of relevant countries
countries <- c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia" ,"Finland", "France", "Germany", "Greece", "Hungary", "Iceland", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Norway", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom")
```

## V-Dem

How can we then figure out how similar these countries are?

The V-Dem data frame consists of many variables describing all countries. We can use some of these variables to compare the relevant countries.

We have picked out variables in four different categories:

-   Economic and Demographic

-   Political Governance

-   Social Equality and Rights

-   Corruption

### **Variable description**

Here is a description of all the variables used in our analysis, and why they can be relevant.

#### Economic and Demographic:

e_area: **Land area** - Measures the total area of land within a specific geographical region or country, providing insights into the physical expanse available for various economic, agricultural, and developmental activities.

e_gdppc: **GDP per capita** - A measure of a country's economic output per person, providing insights into the standard of living and economic development.

e_miinflat: **Inflation** - The rate at which the general price level of goods and services rises, affecting purchasing power and the cost of living.

e_total_resources_income_pc: **Petroleum, coal, natural gas, and metals production per capita** - Indicates the availability and utilization of natural resources for economic development.

e_pop: **Population** - The total number of people living in a country, influencing economic growth and resource allocation.

e_pelifeex: **Life expectancy** - The average number of years a person is expected to live, reflecting the overall health and living conditions in a country.

v2clstown: **State ownership of the economy** - Measures the extent of government or state control over economic activities and industries within a country.

#### Political Governance:

v2x_libdem: **Liberal democracy index** - A measure of the extent to which democratic principles are upheld in a country, including individual rights and freedoms.

v2x_egaldem: **Egalitarian democracy index** - A measure of the extent to which democratic institutions promote equal representation and participation among citizens.

v2elfrfair: **Free and fair elections** - Indicates the integrity and fairness of electoral processes in determining the government.

v2xnp_pres: **Presidentialism Index** - Indicates the concentration of power in the presidency within a democratic system.

v2svdomaut: **Domestic autonomy** - Reflects the independence and autonomy of a country's domestic affairs.

v2svstterr: **State authority over territory** - Indicates the government's control over its territorial boundaries.

#### Social Equality and Rights:

v2clrelig: **Freedom of religion** - Indicates the level of religious freedom and tolerance in a country.

v2clfmove: **Freedom of foreign movement** - Measures the freedom of citizens to travel and move across borders.

v2pepwrses: **Power distributed by socioeconomic position** - Reflects the equitable distribution of power among different socioeconomic groups.

v2peedueq: **Educational equality** - Measures the level of equality in access to education across different groups.

v2peasbecon: **Access to state business opportunities by socioeconomic position** - Indicates the accessibility of economic opportunities to different socioeconomic groups.

v2cagenmob: **Mass mobilization** - Measures the ability of citizens to mobilize and participate in collective actions, such as demonstrations, strikes and sit-ins.

v2catrauni: **Engagement in independent trade unions** - Reflects the degree of freedom for citizens to engage in trade unions and labor movements.

#### Corruption:

v2exbribe: **Executive bribery and corruption exchanges** - Measures the prevalence of corruption within the executive branch of government.

v2xnp_regcorr: **Regime corruption** - Measures corruption within the political regime.

v2excrptps: **Public sector corrupt exchanges** - Measures the extent of corruption within the public sector.

v2mecorrpt: **Media corruption** - Measures corruption within the media sector.

e_wbgi_cce: **Control of corruption** - Measures the effectiveness of controlling corruption in a country.

## The analysis begins

Here we gather the data in order to start analyzing it.

```{r}

## Working in the right directory local on the computer
setwd("/home/julsofpet/ISS-SSB/deciding_comparable_countries")

## I need the tidyverse package
library(tidyverse)
```

```{r}
# The original data frame is to large to run in git, therefore the first wrangling is done locally and then the file will be loaded into this document
#|eval: false

## Loading in data
load("V-Dem-CY-Full+Others-v13.rds")
```

### Selecting the relevant variables and observations

The full V-Dem data frame consists of 27555 observations of 4602 variables. We will therefore start by filtering out countries and time periods that are not relevant.

We will filter out years before 2005 because we do not have the right data available for the later analysis before 2005, and those years are therefore not relevant.

We will then select the variables we want to analyze.

```{r}
#This was also done in the local file
#| eval: false

## Taking out countries I need for my analysis 
data <- data %>%
  filter(country_name %in% countries)


## Filtering out years before 2005 
data <- data %>%
  filter(year >= 2005)


## Choosing variables to include in analysis
data <- data %>%
  select(country_name, year, v2x_libdem, v2x_egaldem, v2elfrfair, v2exbribe, v2excrptps, v2clrelig, v2clfmove, v2pepwrses, v2peedueq, v2peasbecon, v2xnp_pres, v2xnp_regcorr, v2clstown, v2svdomaut, v2svstterr, v2mecorrpt, v2cagenmob, v2catrauni, e_area, e_wbgi_cce, e_gdppc, e_miinflat, e_pop, e_total_resources_income_pc, e_pelifeex)


save(data, file = "relevant_data.rds")
```

```{r}
load("relevant_data.rds")
```

### Creating the mean

In order to compare all the countries we need to let each country only have one value per variable, not one for each year.

We will then need to calculate the mean for each country and variable over all years.

```{r}
# Calculate the mean for each variable for each country
df_means <- data %>%
  
  # Put all the years in a group for each country
  group_by(country_name) %>%
  
  # Calculate the mean of each of the variable of all the years
  summarise(across(.cols = c("v2x_libdem", "v2x_egaldem", "v2elfrfair", "v2exbribe", "v2excrptps", "v2clrelig", "v2clfmove", "v2pepwrses", "v2peedueq", "v2peasbecon", "v2xnp_pres", "v2xnp_regcorr", "v2clstown", "v2svdomaut", "v2svstterr", "v2mecorrpt", "v2cagenmob", "v2catrauni", "e_area", "e_wbgi_cce", "e_gdppc", "e_miinflat", "e_pop", "e_total_resources_income_pc", "e_pelifeex"), .fns = mean, na.rm = TRUE))

```

Now we have a data frame that only has one row per country, with all the variables in the columns.

## Data wrangling

In order for the next steps to work we need to omit the country names.

The first data frame is the same as over, just excluding the country names.

The others only have the variables in each category as described in the variable description above, also excluding country names.

```{r}
# All dataframes are created to exclude country names for the next step

# All variables
df_noname <- df_means %>%
  select(v2x_libdem, v2x_egaldem, v2elfrfair, v2exbribe, v2excrptps, v2clrelig, v2clfmove, v2pepwrses, v2peedueq, v2peasbecon, v2xnp_pres, v2xnp_regcorr, v2clstown, v2svdomaut, v2svstterr, v2mecorrpt, v2cagenmob, v2catrauni, e_area, e_wbgi_cce, e_gdppc, e_miinflat, e_pop, e_total_resources_income_pc, e_pelifeex)

# All variables in corruption category
df_corr <- df_means %>% 
  select(v2exbribe, v2xnp_regcorr, v2excrptps, v2mecorrpt, e_wbgi_cce)

# All variables in economic and demographic category
df_econ_dem <- df_means %>% 
  select(e_area, e_gdppc, e_miinflat, e_total_resources_income_pc, e_pop, e_pelifeex, v2clstown)

# All variables in political governance category
df_poli_gov <- df_means %>% 
  select(v2x_libdem, v2x_egaldem, v2elfrfair, v2xnp_pres, v2svdomaut, v2svstterr)

# All variables in social equality and rights category
df_soceq_right <- df_means %>% 
  select(v2clrelig, v2clfmove, v2pepwrses, v2peedueq, v2peasbecon, v2cagenmob, v2catrauni)

```

## Creating rankings

In order to create the ranking system, we need to compare each value to Norway's value.

We will calculate the difference in the values between the countries and Norway. Then we will rank all the countries for each variable by how far away their value is from Norway's value. Then we have a ranking by each variable.

For example the country that is most similar will receive the score 2 (since Norway will be no. 1).

In order to create a total ranking we will add up all the rankings, and give each country a total score. In the total ranking, we rank by 25 different variables, and then the lowest possible score is 25 (this will be given to Norway).

In the end, the countries with the lowest scores will be the most similar to Norway.

After reciveing a score we will combine the data frames with the vector containing country names and be able to see which countries have what score.

### Category ranking

Each category will also be ranked in the exact same way (using the same function), and receive a ranking based only on all the variables in each category.

```{r}
# The function takes a dataframe 's' as input and calculates the ranking of each element in the columns based on its absolute difference from the 22th element in each column. The 22th element in Norway's value. 

final_ranking <- function(s) {
  
  # Calculate the ranking for each column
  df_rank <- apply(s, MARGIN = 2, FUN = function(x){
    
    # Store the 24th element in the column (null point)
    null_point = x[22]
    
    # Calculate the absolute difference between each element and the null point
    y <- abs(x - null_point)
    
    # Calculate the rank of each element based on the absolute differences
    z <- rank(y)
    return(z)
})
  
  # Convert the ranking matrix into a data frame
  df_rank <- as.data.frame(df_rank)
  
  # Calculate the sum of ranks for each row (country) in the data frame
  df_rank$sum_rank <- apply(df_rank, MARGIN = 1, FUN = function(x){
  y <- sum(x, na.rm = TRUE)
})
  
  # Combine the calculated ranks with the 'countries' vector
  df_rank_f <- df_rank %>%
  cbind(countries)
  
  # Return the final data frame with the calculated ranks and countries
  return(df_rank_f)
}

# Create rankings

# Create ranking based on all factors
total_rank <- final_ranking(df_noname)

# Create ranking based on corruption category
corr_rank <- final_ranking(df_corr)

# Create ranking based on economic and demographic category
econ_dem_rank <- final_ranking(df_econ_dem)

# Create ranking based on political governance category
poli_gov_rank <- final_ranking(df_poli_gov)

# Create ranking based on social equality and rights category
soceq_right_rank <- final_ranking(df_soceq_right)
```
